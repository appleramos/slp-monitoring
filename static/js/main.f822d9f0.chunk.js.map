{"version":3,"sources":["contexts/PlayersContext.js","components/UserInput.js","components/PlayerMonitoringTable.js","components/DataView.js","components/EarningsSummary.js","components/PlayerEarningsTable.js","components/RatesView.js","components/EarningsView.js","components/gcash.jpg","components/DonationView.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["PlayersContext","createContext","PlayersContextProvider","props","storagePlayers","JSON","parse","window","localStorage","getItem","value","useState","players","setPlayers","playersData","setPlayersData","selectedPlayer","setSelectedPlayer","slpRatePeso","setSlpRatePeso","earningsUnit","setEarningsUnit","slpRateLoading","setSlpRateLoading","Provider","children","UserInput","onSubmit","onCancel","visible","useContext","sShare","parseInt","get","managersShare","setManagersShare","isIsko","setIsIsko","Form","useForm","form","onFinish","values","playersString","name","address","type","isko_share","account_name","filter","player","length","message","warning","scholarsShare","key","Date","now","resetFields","title","onOk","getFieldsValue","closable","onFieldsChange","getFieldValue","iskosShare","Item","rules","required","initialValue","placeholder","label","Group","buttonStyle","Button","help","min","max","formatter","parser","replace","disabled","Paragraph","Typography","PlayerMonitoringTable","loading","onDelete","onEdit","getFromPlayersData","ethAddress","dataKey","format","playerData","id","toLowerCase","data","numeral","moment","renderAddress","text","firstDigits","substring","lastDigits","copyable","handleEditPlayer","deletePlayer","columns","render","_","record","icon","QuestionCircleOutlined","style","color","onConfirm","danger","DeleteOutlined","EditOutlined","onClick","width","dataIndex","playerType","isNaN","fontWeight","marginRight","dataSource","scroll","x","Title","DataView","level","small","EarningsSummary","display","marginBottom","flexWrap","total","forEach","pData","p","parseFloat","getManagersTotalEarnings","isko","iskoSlpShare","getIskosTotalEarnings","PlayerEarningsTable","getIskoShare","shareInPeso","shareInSLP","iskosSharePercent","iskoShare","getManagerShare","managersSharePrecent","RatesView","Input","active","size","editable","onChange","rateText","setItem","options","e","target","optionType","EarningsView","DonationView","marginTop","alt","src","GCash","TabPane","Tabs","Main","slpRatePesoStorage","tableLoading","setTableLoading","isFormVisible","setIsFormVisible","useEffect","loadPlayerData","loadSlpRate","a","axios","res","coingeckoValue","fetchData","newPlayersData","client_id","claimable_total","last_claimed_item_at","locked","push","claimable","lockedSlp","lastClaimedAt","dailyAvg","getDailyAvg","nextClaimDate","getNextClaimDate","lastClaimDate","dateDiff","diff","add","className","padding","margin","fontSize","flexGrow","Modal","info","content","shape","RedoOutlined","PlusOutlined","cloneDeep","newPlayers","then","pdIndex","findIndex","pIndex","splice","stringify","catch","err","error","defaultActiveKey","tab","success","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f822d9f0.chunk.js","sourcesContent":["import React, {\n\tcreateContext,\n\tuseState,\n} from 'react'\n\nexport const PlayersContext = createContext()\n\nexport const  PlayersContextProvider = (props) => {\n  const storagePlayers = JSON.parse(window.localStorage.getItem('players')) || { value: [] }\n  const [ players, setPlayers ] = useState(storagePlayers)\n  const [ playersData, setPlayersData ] = useState([])\n\tconst [ selectedPlayer, setSelectedPlayer ] = useState({})\n  const [ slpRatePeso, setSlpRatePeso ] = useState()\n  const [ earningsUnit, setEarningsUnit ] = useState('peso')\n\tconst [ slpRateLoading, setSlpRateLoading ] = useState(false)\n  \n\treturn(\n\t\t<PlayersContext.Provider\n\t\t\tvalue={{\n\t\t\t\tplayers,\n        setPlayers,\n        playersData,\n        setPlayersData,\n\t\t\t\tselectedPlayer,\n\t\t\t\tsetSelectedPlayer,\n\t\t\t\tslpRatePeso,\n\t\t\t\tsetSlpRatePeso,\n\t\t\t\tearningsUnit,\n\t\t\t\tsetEarningsUnit,\n\t\t\t\tslpRateLoading,\n\t\t\t\tsetSlpRateLoading,\n\t\t\t}}\n\t\t>\n\t\t\t{props.children}\n\t\t</PlayersContext.Provider>\n\t)\n}\n","import React, { useState, useContext, } from 'react'\n\nimport { Input, Form, message, Modal, Radio, InputNumber, } from 'antd'\nimport { filter, get, } from 'lodash'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst UserInput = ({ onSubmit, onCancel, visible, }) => {\n  const {\n\t\tselectedPlayer,\n\t} = useContext(PlayersContext)\n\n  let sShare = parseInt(get(selectedPlayer, 'isko_share', 0))\n\n  const [ managersShare, setManagersShare ] = useState(100 - sShare)\n  const [ isIsko, setIsIsko ] = useState(get(selectedPlayer, 'type', 'Manager') === 'Isko')\n  const [ form ] = Form.useForm()\n\n  const onFinish = (values) => {\n    let playersString = window.localStorage.getItem('players')\n    let players = JSON.parse(playersString) || { value: [] }\n    const {\n      name,\n      address,\n      type,\n      isko_share,\n      account_name,\n    } = values\n\n    if (!selectedPlayer.name) {\n      const existingPlayer = filter(players.value, (player) => player.address === values.address)\n      if (existingPlayer.length > 0) {\n        message.warning('The address you entered is already in the list');\n        return\n      }\n    }\n  \n    const scholarsShare = isko_share === '' ? 0 : parseInt(isko_share)\n    onSubmit({\n      key: Date.now(),\n      name: name || '',\n      address: address || '',\n      type,\n      account_name,\n      isko_share: scholarsShare\n    })\n    form.resetFields()\n  }\n\n  const handleCancel = () => {\n    onCancel()\n  }\n\n  const handleOk = () => {\n    onFinish(form.getFieldsValue())\n  }\n\n  const handleFieldsChange = () => {\n    const values = form.getFieldValue()\n    const {\n      isko_share,\n      type\n    } = values\n\n    setIsIsko(type === 'Isko')\n\n    let iskosShare = isko_share === '' ? 0 : parseInt(isko_share)\n    let managersShare = 100 - iskosShare\n    if (iskosShare > 100) {\n      setManagersShare(0)\n      return\n    }\n    setManagersShare(managersShare)\n  }\n\n  return (\n    <Modal\n      title={ selectedPlayer.name ? 'Edit Player' : 'Add a Player'}\n      visible={ visible }\n      onOk={ handleOk } \n      onCancel={ handleCancel }\n      closable={ false }\n    >\n      <Form \n        onFinish={ onFinish }\n        name=\"axie-user-form\"\n        form={form}\n        onFieldsChange={ handleFieldsChange }\n      >\n        <Form.Item\n          name=\"name\"\n          rules={[{ required: true, message: 'Please input nickname' }]}\n          initialValue={ selectedPlayer.name }\n        >\n          <Input placeholder=\"Nickname *\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"account_name\"\n          initialValue={ selectedPlayer.account_name }\n        >\n          <Input placeholder=\"Account Name (optional)\"/>\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          rules={[{ required: true, message: 'Please input player address' }]}\n          initialValue={ selectedPlayer.address }\n        >\n          <Input placeholder=\"Etherium address *\"/>\n        </Form.Item>\n        <Form.Item \n          label=\"Type\" \n          name=\"type\"\n          initialValue={ get(selectedPlayer, 'type', 'Manager') }\n        >\n          <Radio.Group buttonStyle=\"solid\">\n            <Radio.Button value=\"Isko\">Isko</Radio.Button>\n            <Radio.Button value=\"Manager\">Manager</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        { isIsko &&\n          <Form.Item\n            label=\"Isko's share\"\n            name=\"isko_share\"\n            initialValue={ get(selectedPlayer, 'isko_share', 60) }\n            help={ `Manager's share is ${managersShare}%` }\n            rules={[{ required: isIsko, message: 'Isko\\'s share is required' }]}\n          >\n            <InputNumber\n              placeholder=\"Isko's share\"\n              min={0}\n              max={100}\n              formatter={value => `${value}%`}\n              parser={value => value.replace('%', '')}\n              disabled={ !isIsko }\n            />\n          </Form.Item>\n        }\n      </Form>\n    </Modal>\n  )\n}\n\nexport default UserInput","import React, { Fragment, useContext } from 'react'\nimport numeral from 'numeral'\nimport moment from 'moment'\nimport { filter, } from 'lodash'\n\nimport { Table, Popconfirm, Button, Typography, Tag, } from 'antd'\nimport { DeleteOutlined, QuestionCircleOutlined, EditOutlined, } from '@ant-design/icons'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst { Paragraph } = Typography\n\nconst PlayerMonitoringTable = ({ loading, onDelete, onEdit, }) => {\n  const {\n\t\tplayers,\n    playersData,\n\t} = useContext(PlayersContext)\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id.toLowerCase() === ethAddress.toLowerCase())\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0,0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const renderAddress = (text) => {\n    const firstDigits = text.substring(0, 7)\n    const lastDigits = text.substring(text.length - 5, text.length)\n\n    return <Paragraph copyable={{ text: text.toLowerCase() }}>{ `${firstDigits}...${lastDigits}` }</Paragraph>\n  }\n\n  const renderPlayer = (name, player) => {\n    let {\n      type,\n      isko_share,\n      account_name,\n      address,\n    } = player\n\n    let playerType = type || 'Manager'\n    let color = playerType === 'Manager' ? 'gold' : 'cyan'\n    if (isNaN(isko_share) || !isko_share) {\n      isko_share = 0\n    }\n    return (\n      <div>\n        <div>\n          <span style={{ fontWeight: 'bold' }}>{ name }</span>\n          { account_name &&\n            <span>&nbsp;|&nbsp;{ account_name }</span>\n          }\n        </div>\n        <div>{ renderAddress(address) }</div>\n        <div>\n          { isko_share !== 0 &&\n            <Fragment>\n              <span>{`${isko_share} / ${100 - isko_share}`}</span>\n              <span style={{ marginRight: '10px' }}></span>\n            </Fragment>\n          }\n          <Tag color={ color }>{ playerType }</Tag>\n        </div>\n      </div>\n    )\n  }\n\n  const renderButton = (_, record) => {\n    return (\n      <div>\n        <Popconfirm \n          title={ `Are you sure you want to delete ${record.name}?`}\n          icon={<QuestionCircleOutlined style={{ color: 'red' }} />}\n          onConfirm={ () => deletePlayer(record) }\n        >\n          <Button \n            type=\"link\" \n            danger \n            icon={<DeleteOutlined />} \n          />\n        </Popconfirm>\n        <Button \n          type=\"link\" \n          icon={<EditOutlined />} \n          onClick={ () => handleEditPlayer(record) }\n        />\n      </div>\n    )\n  }\n\n  const handleEditPlayer = (player) => {\n    onEdit(player)\n  }\n\n  const deletePlayer = (player) => {\n    onDelete(player)\n  }\n\n  const columns = [\n    {\n      title: '',\n      render: renderButton,\n      width: 5,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 90,\n      render: renderPlayer\n    },\n    {\n      title: 'Claimed SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'claimable', 'number')}</span>\n    },\n    {\n      title: 'Locked SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lockedSlp', 'number')}</span>\n    },\n    {\n      title: 'Total SLP',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Daily Avg',\n      dataIndex: 'address',\n      key: 'address',\n      width: 50,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'dailyAvg', 'decimal')}</span>\n    },\n    {\n      title: 'Last Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'lastClaimedAt', 'date')}</span>\n    },\n    {\n      title: 'Next Claim Date',\n      dataIndex: 'address',\n      key: 'address',\n      width: 150,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'nextClaimDate', 'none')}</span>\n    }\n  ]\n\n  return (\n    <Table \n      loading={ loading }\n      dataSource={ players.value }\n      columns={ columns }\n      scroll={{ x: 1300 }}\n      // expandable={{\n      //   expandedRowRender: renderExpandedView,\n      //   rowExpandable: record => record.name !== 'No Player Data',\n      // }}\n    />\n  )\n}\n\nexport default PlayerMonitoringTable","import React from 'react'\nimport { Typography } from 'antd'\n\nconst { Title } = Typography\n\nconst DataView = ({ value, title, style = {}, level = 4, small }) => {\n  return (\n    <div style={{...style}}>\n      <div style={{ marginRight: '30px', color: 'gray' }}>{ title }</div>\n      { small ?\n        <div>{ value }</div>\n        :\n        <Title level={ level }>\n          { value }\n        </Title>\n      }\n      \n    </div>\n  )\n}\nexport default DataView","import React, { Fragment, useContext } from 'react'\nimport { filter } from 'lodash'\nimport numeral from 'numeral'\n\nimport { PlayersContext } from '../contexts/PlayersContext'\nimport DataView from './DataView'\n\nconst EarningsSummary = () => {\n  const {\n\t\tplayers,\n    playersData,\n    slpRatePeso,\n    earningsUnit,\n\t} = useContext(PlayersContext)\n\n  const getIskosTotalEarnings = () => {\n    let total = 0\n    const iskos = filter(players.value, { type: 'Isko' })\n    iskos.forEach(isko => {\n      const { isko_share, address } = isko\n      const pData = filter(playersData, p => p.id.toLowerCase() === address.toLowerCase())\n      if (pData.length > 0) {\n        const iskoSlpShare = pData[0].total * (isko_share / 100)\n        total += iskoSlpShare\n      }\n    })\n    if (earningsUnit === 'peso') {\n      return `PHP ${numeral(total * slpRatePeso).format('0,0.00')}`\n    }\n    return numeral(total).format('0,0.0')\n  }\n\n  const getManagersTotalEarnings = () => {\n    let total = 0\n    players.value.forEach(player => {\n      const { address, type, isko_share, } = player\n      const pData = filter(playersData, p => p.id.toLowerCase() === address.toLowerCase())\n      if (pData.length > 0) {\n        if (type === 'Isko') {\n          const managersShare = 100 - isko_share\n          total += pData[0].total * (managersShare / 100)\n        } else {\n          total += pData[0].total\n        }\n      }\n      \n    })\n    if (earningsUnit === 'peso') {\n      return `PHP ${numeral(total * parseFloat(slpRatePeso)).format('0,0.00')}`\n    }\n    return numeral(total).format('0,0.0')\n  }\n\n  return (\n    <Fragment>\n      <div style={{ display: 'flex', marginBottom: '15px', flexWrap: 'wrap' }}>\n        <DataView \n          title=\"Manager's Total Earnings\"\n          value={ getManagersTotalEarnings() }\n          style={{ marginRight: '20px' }}\n        />\n        <DataView \n          title=\"Iskos' Total Earnings\"\n          value={ getIskosTotalEarnings() }\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EarningsSummary","import React, { useContext, } from 'react'\nimport moment from 'moment'\nimport numeral from 'numeral'\nimport { filter, } from 'lodash'\n\nimport { Table, Tag, } from 'antd'\nimport { PlayersContext } from '../contexts/PlayersContext'\n\nconst PlayerEarningsTable = () => {\n  const {\n\t\tplayers,\n    playersData,\n    slpRatePeso,\n\t} = useContext(PlayersContext)\n\n  const renderPlayer = (name, player) => {\n    const {\n      type,\n      isko_share\n    } = player\n\n    let playerType = type || 'Manager'\n    let color = playerType === 'Manager' ? 'gold' : 'cyan'\n    return (\n      <div>\n        <div>\n          <span style={{ fontWeight: 'bold', marginRight: '10px' }}>{ name }</span>\n          <Tag color={ color }>{ playerType }</Tag>\n        </div>\n        {/* <div>{ renderAddress(player.address) }</div> */}\n        { playerType === 'Isko' &&\n          `${isko_share} / ${100 - isko_share}`\n        }\n      </div>\n    )\n  }\n\n  const getFromPlayersData = (ethAddress, dataKey, format) => {\n    const playerData = filter(playersData, player => player.id.toLowerCase() === ethAddress.toLowerCase())\n    if (playerData.length > 0) {\n      const data = playerData[0][dataKey]\n      switch (format) {\n        case 'number':\n          return numeral(data).format('0,0')\n        case 'date':\n          return moment(new Date(data * 1000)).format('LLL')\n        case 'decimal':\n          return numeral(data).format('0.0')\n        default:\n          return data;\n      }\n    }\n    return '-'\n  }\n\n  const getIskoShare = (player, type) => {\n    let shareInPeso = ''\n    let shareInSLP = ''\n    if (player.type === 'Manager') {\n      return '-'\n    }\n    if (playersData) {\n      const playerData = filter(playersData, p => p.id.toLowerCase() === player.address.toLowerCase())[0]\n      if (playerData && player) {\n        const iskosSharePercent = player.isko_share || 0\n        let iskoShare = 0\n        if (iskosSharePercent !== 0) {\n          shareInSLP = (playerData.total * ( iskosSharePercent/100 ))\n          iskoShare = shareInSLP * slpRatePeso\n        }\n        shareInPeso = `PHP ${numeral(iskoShare).format('0,0.00')}`\n      }\n    }\n    if (type === 'slp') {\n      return numeral(shareInSLP).format('0,0.0')\n    }\n    return shareInPeso\n  }\n\n  const getManagerShare = (player, type) => {\n    let shareInPeso = '-'\n    let shareInSLP = '-'\n    if (playersData) {\n      const playerData = filter(playersData, p => p.id.toLowerCase() === player.address.toLowerCase())[0]\n      if (playerData && player) {\n        const iskosSharePercent = player.isko_share || 0\n        const managersSharePrecent = 100 - iskosSharePercent\n        let managersShare = playerData.total * slpRatePeso\n        shareInSLP = playerData.total\n        if (iskosSharePercent !== 0) {\n          shareInSLP = (playerData.total * ( managersSharePrecent/100 ))\n          managersShare = shareInSLP * slpRatePeso\n        }\n        shareInPeso = `PHP ${numeral(managersShare).format('0,0.00')}`\n      }\n    }\n    if (type === 'slp') {\n      return numeral(shareInSLP).format('0,0.0')\n    }\n    return shareInPeso\n  }\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: renderPlayer\n    },\n    {\n      title: 'SLP Earned',\n      dataIndex: 'name',\n      key: 'name',\n      width: 10,\n      render: (_, record) => <span>{getFromPlayersData(record.address, 'total', 'number')}</span>\n    },\n    {\n      title: 'Isko\\'s Share',\n      children: [\n        {\n          title: 'SLP',\n          dataIndex: 'name',\n          key: 'name',\n          width: 10,\n          render: (_, record) => <span>{getIskoShare(record, 'slp')}</span>\n        },\n        {\n          title: 'Peso',\n          dataIndex: 'name',\n          key: 'name',\n          width: 10,\n          render: (_, record) => <span>{getIskoShare(record, 'peso')}</span>\n        },\n      ]\n    },\n    {\n      title: 'Manager\\'s Share',\n      children: [\n        {\n          title: 'SLP',\n          dataIndex: 'name',\n          key: 'name',\n          width: 10,\n          render: (_, record) => <span>{getManagerShare(record, 'slp')}</span>\n        },\n        {\n          title: 'Peso',\n          dataIndex: 'name',\n          key: 'name',\n          width: 10,\n          render: (_, record) => <span>{getManagerShare(record, 'peso')}</span>\n        },\n      ]\n    },\n  ]\n\n  return (\n    <Table \n      scroll={{ x: 700 }}\n      dataSource={ players.value }\n      columns={ columns }\n    />\n  )\n}\n\nexport default PlayerEarningsTable","import React, { useContext, } from 'react'\nimport numeral from 'numeral'\n\nimport { Radio, Typography, Skeleton, } from 'antd'\n\nimport { PlayersContext } from '../contexts/PlayersContext'\nimport DataView from './DataView'\n\nconst { Paragraph, Title, } = Typography\n\nconst RatesView = () => {\n  const {\n\t\tslpRatePeso,\n    setSlpRatePeso,\n    earningsUnit,\n    setEarningsUnit,\n    slpRateLoading,\n\t} = useContext(PlayersContext)\n\n  const updateSlpRatePeso = (rateText) => {\n    if (rateText !== '') {\n      setSlpRatePeso(parseFloat(rateText))\n      window.localStorage.setItem('slpRatePeso', parseFloat(rateText))\n    }\n  }\n\n  const handleEarningsUnitChange = (e) => {\n     setEarningsUnit(e.target.value)\n  }\n\n  const earningsOptions = [\n    { label: 'Peso', value: 'peso' },\n    { label: 'SLP', value: 'slp' },\n  ]\n\n  return (\n    <div style={{ marginBottom: '10px', display: 'flex' }}>\n      <div>\n        <div style={{ marginRight: '50px', color: 'gray' }}>SLP Rate in Peso</div>\n        { slpRateLoading ?\n          <Skeleton.Input style={{ width: 40 }} active={ true } size=\"small\" />\n          :\n          <div>\n            <Title level={4}>\n              <Paragraph \n                editable={{ onChange: updateSlpRatePeso }}\n              >\n                { numeral(slpRatePeso).format('0,0.00') }\n              </Paragraph>\n            </Title>\n            {/* <Title level={4}>\n              { `PHP ${numeral(slpRatePeso).format('0,0.00')}` }\n            </Title> */}\n          </div>\n        }\n      </div>\n      <div>\n        <DataView \n          title=\"Earnings Unit\"\n          value={\n            <Radio.Group\n              options={ earningsOptions }\n              onChange={ handleEarningsUnitChange }\n              value={ earningsUnit }\n              optionType=\"button\"\n              buttonStyle=\"solid\"\n            />\n          }\n        />\n      </div>\n    </div>\n  )\n}\nexport default RatesView","import React from 'react'\nimport EarningsSummary from './EarningsSummary'\nimport PlayerEarningsTable from './PlayerEarningsTable'\nimport RatesView from './RatesView'\n\nconst EarningsView = () => {\n  return (\n    <div>\n      <RatesView />\n      <EarningsSummary />\n      <PlayerEarningsTable />\n    </div>\n  )\n}\n\nexport default EarningsView","export default __webpack_public_path__ + \"static/media/gcash.d3dcbc45.jpg\";","import React from 'react'\nimport DataView from './DataView'\nimport GCash from './gcash.jpg'\nconst DonationView = () => {\n  return (\n    <div>\n      <DataView \n        title=\"Ronin Address [apple-bit]\"\n        value=\"ronin:786521e1ef005f71b9b454e6e4be48bdc645a3c6\"\n        level={ 5 }\n        style={{ marginTop: '20px' }}\n      />\n      <DataView \n        title=\"GCash\"\n        style={{ marginTop: '20px' }}\n        value={\n          <img alt=\"GCash QR\" src={ GCash } style={{ width: '50%' }}/>\n        }\n        level={ 5 }\n      />\n      <DataView \n        title=\"Developer\"\n        style={{ marginTop: '20px' }}\n        value=\"Apple Ramos\"\n        small\n      />\n    </div>\n  )\n}\n\nexport default DonationView","import React, { useState, useEffect, useContext, } from 'react'\nimport { cloneDeep, filter, findIndex, get, } from 'lodash'\nimport axios from 'axios'\nimport moment from 'moment'\n\nimport { Button, message, Tabs, Modal, } from 'antd'\nimport { RedoOutlined, PlusOutlined, } from '@ant-design/icons'\n\nimport UserInput from './UserInput'\nimport PlayerMonitoringTable from './PlayerMonitoringTable'\nimport EarningsView from './EarningsView';\nimport { PlayersContext } from '../contexts/PlayersContext'\nimport DonationView from './DonationView'\n\nconst { TabPane } = Tabs\n\nfunction Main() {\n  const {\n\t\tplayers,\n    setPlayers,\n    playersData,\n    setPlayersData,\n    selectedPlayer,\n    setSelectedPlayer,\n    setSlpRatePeso,\n    slpRatePeso,\n    setSlpRateLoading,\n\t} = useContext(PlayersContext)\n  const slpRatePesoStorage = window.localStorage.getItem('slpRatePeso') || 1\n  const [ tableLoading, setTableLoading ] = useState(true)\n  const [ isFormVisible, setIsFormVisible ] = useState(false)\n\n  useEffect(() => {\n    loadPlayerData()\n    loadSlpRate()\n  }, [])\n\n  const loadSlpRate = () => {\n    setSlpRateLoading(true)\n    async function fetchData() {\n      try {\n        const res = await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=smooth-love-potion&vs_currencies=php')\n        if (res.data) {\n          const coingeckoValue = get(res.data, 'smooth-love-potion.php', slpRatePeso)\n          setSlpRatePeso(coingeckoValue)\n        }\n        setSlpRateLoading(false)\n      } catch (err) {\n        setSlpRatePeso(slpRatePesoStorage)\n        setSlpRateLoading(false)\n      }\n    }\n    fetchData()\n  }\n\n  const loadPlayerData = () => {\n    let newPlayersData = []\n\n    async function fetchData(player) {\n      try {\n        const res = await axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          const locked = total - claimable_total\n          newPlayersData.push({\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: locked,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, locked),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          })\n        }\n      } catch (err) {\n        newPlayersData.push({\n          id: `invalid-user-${player.address}`,\n          total: 0,\n          claimable: 0,\n          lockedSlp: 0,\n          lastClaimedAt: moment(),\n          dailyAvg: 0,\n          nextClaimDate: moment()\n        })\n      }\n      setPlayersData(newPlayersData)\n      if (newPlayersData.length === players.value.length) {\n        setTableLoading(false)\n      }\n    }\n\n    if (players.value.length < 1) {\n      setTableLoading(false)\n      return\n    }\n    players.value.forEach((player) => {\n      fetchData(player)\n    })\n  }\n\n  const getDailyAvg = (lastClaimedAt, total) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    const dateNow = moment()\n    const dateDiff = dateNow.diff(lastClaimDate, 'days')\n    if (dateDiff < 1) {\n      return total\n    }\n\n    return total/dateDiff\n  }\n\n  const getNextClaimDate = (lastClaimedAt) => {\n    const lastClaimDate = moment(new Date(lastClaimedAt * 1000))\n    return lastClaimDate.add(14, 'days').format('LLL')\n  }\n\n  const handleDeletePlayer = (player) => {\n    const newPlayers = filter(players.value, (p) => p.key !== player.key) \n    const newPlayersData = filter(playersData, p => p.id !== player.address)\n    setPlayers({value: newPlayers})\n    setPlayersData(newPlayersData)\n    window.localStorage.setItem('players', JSON.stringify({value: newPlayers}))\n    message.success(`Successfully deleted ${player.name}`)\n  }\n\n  const handleEditPlayer = (player) => {\n    setIsFormVisible(true)\n    setSelectedPlayer(player)\n  }\n\n  const handleSubmit = (player) => {\n    setTableLoading(true)\n    const newPlayersData = cloneDeep(playersData)\n    const newPlayers = cloneDeep(players)\n\n    axios(`https://lunacia.skymavis.com/game-api/clients/${player.address}/items/1`)\n      .then(res => {\n        if (res.data) {\n          const {\n            client_id,\n            total,\n            claimable_total,\n            last_claimed_item_at,\n          } = res.data\n          const locked = total - claimable_total\n          const playerData = {\n            id: client_id,\n            total: total || 0,\n            claimable: claimable_total || 0,\n            lockedSlp: locked,\n            lastClaimedAt: last_claimed_item_at,\n            dailyAvg: getDailyAvg(last_claimed_item_at, locked),\n            nextClaimDate: getNextClaimDate(last_claimed_item_at)\n          }\n\n          if (selectedPlayer.name) {\n            let pdIndex = findIndex(newPlayersData, player => {\n              return player.id.toLowerCase() === selectedPlayer.address.toLowerCase()\n            })\n            let pIndex = findIndex(newPlayers.value, player => {\n              return player.address.toLowerCase() === selectedPlayer.address.toLowerCase()\n            })\n            if (pdIndex !== -1 && pIndex !== -1) {\n              newPlayersData.splice(pdIndex, 1, playerData)\n              newPlayers.value.splice(pIndex, 1, player)\n            }\n          } else {\n            newPlayersData.push(playerData)\n            newPlayers.value.push(player)\n          }\n        }\n        setTableLoading(false)\n        setPlayersData(newPlayersData)\n        window.localStorage.setItem('players', JSON.stringify(newPlayers))\n        setPlayers(newPlayers)\n      })\n      .catch(err => {\n        message.error('You entered an invalid etherium address')\n        setTableLoading(false)\n      })\n      setIsFormVisible(false)\n  }\n\n  const handleOpenForm = () => {\n    setIsFormVisible(true)\n    setSelectedPlayer({})\n  }\n\n  const handleCancelForm = () => {\n    setIsFormVisible(false)\n  }\n\n  const handleReload = () => {\n    const newPlayersData = []\n    setTableLoading(true)\n    setPlayersData(newPlayersData)\n    loadPlayerData()\n    loadSlpRate()\n  }\n\n  const handleDonate = () => {\n    Modal.info({\n      title: 'Donation channels',\n      content: (\n        <DonationView />\n      ),\n      onOk() {},\n    });\n  }\n\n  return (\n    <div \n      className=\"SLP_Monitoring_App\"\n      style={{\n        padding: '15px 25px',\n        margin: 'auto'\n      }}\n    >\n      <div\n        style={{\n          fontSize: '1.5em',\n          fontWeight: 'bold',\n          marginBottom: '10px',\n          display: 'flex'\n        }}\n      >\n        <div style={{ flexGrow: '3' }}>\n          <span>SLP Tracker</span>\n          <Button             \n            type=\"link\" \n            onClick={ handleDonate }\n          >\n            Donate\n          </Button>\n        </div>\n        <Button \n          size=\"large\" \n          shape=\"circle\" \n          icon={<RedoOutlined />} \n          style={{ marginRight: '20px' }}\n          onClick={ handleReload }\n        />\n        <Button \n          size=\"large\" \n          type=\"primary\" \n          shape=\"round\" \n          icon={<PlusOutlined />} \n          onClick={ handleOpenForm }\n        >\n          Player\n        </Button>\n      </div>\n      { isFormVisible &&\n        <UserInput \n          onSubmit={ handleSubmit } \n          visible={ true }\n          onCancel={ handleCancelForm }\n          selectedPlayer={ selectedPlayer }\n        />\n      }\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Monitoring\" key=\"1\">\n          <PlayerMonitoringTable \n            loading={ tableLoading }\n            onDelete={ handleDeletePlayer }\n            onEdit={ handleEditPlayer }\n          />\n        </TabPane>\n        <TabPane tab=\"Estimate Earnings\" key=\"2\">\n          <EarningsView />\n        </TabPane>\n      </Tabs>\n      <div style={{ color: 'gray' }}>\n        © 2021 Apple Ramos\n      </div>\n    </div>\n  )\n}\n\nexport default Main;\n","import './App.css';\nimport 'antd/dist/antd.css'\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport Main from './components/Main'\nimport { PlayersContextProvider } from './contexts/PlayersContext';\n\n\nfunction App() {\n  return (\n    // <Router>\n      <PlayersContextProvider>\n        <Main />\n          {/* <Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath=\"/slp-monitoring\"\n\t\t\t\t\t\t\tcomponent={ Main }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Redirect to=\"/slp-monitoring\"/>\n\t\t\t\t\t</Switch> */}\n      </PlayersContextProvider>\n    // </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}